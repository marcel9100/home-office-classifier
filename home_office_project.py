# -*- coding: utf-8 -*-
"""home_office_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mRe79RzyDH3GxFK8J9SodFHll-k7UNq6
"""

import streamlit as st
# To make things easier later, we're also importing numpy and pandas for
# working with sample data.
import numpy as np
import pandas as pd

import cv2
import matplotlib.pyplot as plt
import torch
import torchvision
from PIL import Image

st.title('Home office classifier project')

uploaded_file = st.file_uploader("Upload an image")
if uploaded_file is not None:
  
  if __name__ == '__main__':
      device = torch.device('cpu' if not torch.cuda.is_available() else 'cuda')
      # Load the model
      model = torch.jit.load('model.pt')
      model.to(device)

      image = Image.open(uploaded_file)
      # Resize your image if needed like so:
      # image = image.resize((some_width, some_height))
      image = np.array(image).astype(np.uint8)
      x = torch.from_numpy(image).permute(2, 0, 1).float()
      x = x.to(device)
      # Get predictions from model
      y = model([{'image': x}])

      # Post process the predicitons with nms:
      to_keep = torchvision.ops.nms(y['pred_boxes'], y['scores'], 0.2)
      y['pred_boxes'] = y['pred_boxes'][to_keep]
      y['pred_classes'] = y['pred_classes'][to_keep]

      # Draw the predictions on the image
      for label, bbox in zip(y['pred_classes'], y['pred_boxes']):
          bbox = list(map(int, bbox))
          x1, y1, x2, y2 = bbox
          cv2.rectangle(image, (x1, y1), (x2, y2), (255, 0, 0), thickness=4)

      plt.imshow(image)
      plt.show()

